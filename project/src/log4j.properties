# log4j
# This is the configuring for logging on the JUnit side (i.e. the client side)
#
# Log4j by default can log messages with five priority levels.
#   1. Use debug to write debugging messages which should not be printed when the application is in production.
#   2. Use info for messages similar to the "verbose" mode of many applications.
#   3. Use warn for warning messages which are logged to some log but the application is able to carry on
#      without a problem.
#   4. Use error for application error messages which are also logged to some log but, still,
#      the application can hobble along. Such as when some administrator-supplied configuration
#      parameter is incorrect and you fall back to using some hard-coded default value.
#   5. Use fatal for critical messages, after logging of which the application quits abnormally.
#
#log4j.debug=true

# Any application log which uses Log4J will be logged to the log file
#log4j.rootCategory = DEBUG,CONSOLE
#log4j.rootCategory = ERROR,CONSOLE
log4j.rootCategory = INFO,ERROR,CONSOLE

# CONSOLE
#log4j.rootLogger=debug, stdout, stderr, R
log4j.rootLogger= OFF

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%5p %c [%t] %F:%L %M - %m%n 

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=ivis.log

log4j.appender.R.MaxFileSize=1000KB

# Keep one backup file
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%5p [%t] %F:%L - %M %m%n 